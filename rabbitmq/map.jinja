
{% set server = salt['grains.filter_by']({
    'default': {
        'collect_statistics_interval': 30000,
        'rates_mode': 'none',
    },
    'Arch': {
        'pkgs': ['rabbitmq'],
        'service': 'rabbitmq',
        'config_file': '/etc/rabbitmq/rabbitmq.config',
        'cookie_file': '/var/lib/rabbitmq/.erlang.cookie',
        'ulimit': 8192,
        'disk_free_limit': 50000000,
        'bind': {
            'address': '0.0.0.0',
            'port': '5672',
            'ssl': {
                'address': '0.0.0.0',
                'port': '5671'
            },
        },
        'management': {
            'bind': {
                'address': '127.0.0.1',
                'port': '15672'
            },
        },
    },
    'Debian': {
        'pkgs': ['rabbitmq-server', 'gettext-base'],
        'service': 'rabbitmq-server',
        'config_file': '/etc/rabbitmq/rabbitmq.config',
        'cookie_file': '/var/lib/rabbitmq/.erlang.cookie',
        'default_file': '/etc/default/rabbitmq-server',
        'ulimit': 8192,
        'disk_free_limit': 50000000,
        'bind': {
            'address': '0.0.0.0',
            'port': '5672',
            'ssl': {
                'address': '0.0.0.0',
                'port': '5671'
            },
        },
        'management': {
            'bind': {
                'address': '127.0.0.1',
                'port': '15672'
            },
        },
    },
    'RedHat': {
        'pkgs': ['rabbitmq-server'],
        'service': 'rabbitmq-server',
        'config_file': '/etc/rabbitmq/rabbitmq.config',
        'cookie_file': '/var/lib/rabbitmq/.erlang.cookie',
        'ulimit': 8192,
        'disk_free_limit': 50000000,
        'bind': {
            'address': '0.0.0.0',
            'port': '5672',
            'ssl': {
                'address': '0.0.0.0',
                'port': '5671'
            },
        },
        'management': {
            'bind': {
                'address': '127.0.0.1',
                'port': '15672'
            },
        },
    },
}, merge=pillar.rabbitmq.get('server', {}), base='default') %}

{% set cluster = pillar.rabbitmq.get('cluster', {}) %}

{%- set rabbitmq_users = {} %}
{%- for host_name, host in server.get('host', {}).iteritems() %}
{%- do rabbitmq_users.update({host.user: [host]}) %}
{%- endfor %}
